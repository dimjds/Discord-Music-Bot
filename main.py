import discord
from discord.ext import commands
import yt_dlp as youtube_dl
import os
import spotipy
from spotipy.oauth2 import SpotifyClientCredentials
from collections import deque
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ .env —Ñ–∞–π–ª–∞
load_dotenv()

# –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–æ–≤ –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
DISCORD_TOKEN = os.getenv('DISCORD_TOKEN')
SPOTIFY_CLIENT_ID = os.getenv('SPOTIFY_CLIENT_ID')
SPOTIFY_CLIENT_SECRET = os.getenv('SPOTIFY_CLIENT_SECRET')

permissions_int = 8
permissions = discord.Permissions(permissions_int)
intents = discord.Intents.default()
intents.members = True
intents.message_content = True

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–µ—Ñ–∏–∫—Å–∞
bot = commands.Bot(command_prefix='!', intents=intents)

# –û–ø–æ–≤–µ—â–µ–Ω–∏–µ, —á—Ç–æ –±–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç
@bot.event
async def on_ready():
    print('Bot online')

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ Spotify API
sp = spotipy.Spotify(auth_manager=SpotifyClientCredentials(
    client_id=SPOTIFY_CLIENT_ID,
    client_secret=SPOTIFY_CLIENT_SECRET
))

# –û—á–µ—Ä–µ–¥—å –ø–µ—Å–µ–Ω
song_queue = deque()

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è —Å–ª–µ–¥—É—é—â–µ–π –ø–µ—Å–Ω–∏
async def play_next(ctx):
    if len(song_queue) > 0:
        next_song = song_queue.popleft()
        await play_song(ctx, next_song['url'], next_song['title'])
    else:
        voice_client = ctx.voice_client
        if voice_client and voice_client.is_connected():
            await voice_client.disconnect()
            await ctx.send("```–ë–æ—Ç –æ—Ç–∫–ª—é—á–∏–ª—Å—è –æ—Ç –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –∫–∞–Ω–∞–ª–∞.üö∂```")

# –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è –ø–µ—Å–Ω–∏
async def play_song(ctx, url, title):
    voice_client = ctx.voice_client
    ydl_opts = {
        'format': 'bestaudio',
        'postprocessors': [{
            'key': 'FFmpegExtractAudio',
            'preferredcodec': 'mp3',
            'preferredquality': '192',
        }],
        'quiet': True,
        'no_warnings': True,
        'default_search': 'ytsearch',
    }

    try:
        with youtube_dl.YoutubeDL(ydl_opts) as ydl:
            info = ydl.extract_info(url, download=False)
            if 'entries' in info:
                info = info['entries'][0]
            audio_url = info['url']
        print(f"Playing URL: {audio_url}")  # –õ–æ–≥ URL
        voice_client.play(discord.FFmpegPCMAudio(
            executable="ffmpeg",
            source=audio_url,
            before_options="-reconnect 1 -reconnect_streamed 1 -reconnect_delay_max 5",
            options="-vn"
        ), after=lambda e: bot.loop.create_task(play_next(ctx)))
        await ctx.send(f'```–ò–≥—Ä–∞–µ—Ç: {title}```')
    except youtube_dl.utils.DownloadError as e:
        await ctx.send(f"```–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∞—É–¥–∏–æ: {e}```")
    except KeyError as e:
        await ctx.send(f"```–ö–ª—é—á {e} –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –∞—É–¥–∏–æ.```")
        print(f"–ò—Å–∫–ª—é—á–µ–Ω–∏–µ: {e}")  # –õ–æ–≥ –∏—Å–∫–ª—é—á–µ–Ω–∏—è
    except Exception as e:
        await ctx.send(f"```–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {e}```")
        print(f"–ò—Å–∫–ª—é—á–µ–Ω–∏–µ: {e}")  # –õ–æ–≥ –∏—Å–∫–ª—é—á–µ–Ω–∏—è

# –ö–æ–º–∞–Ω–¥–∞ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –ø–µ—Å–Ω–∏
@bot.command(name='stop', help='–û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ –∏ –æ—Ç–∫–ª—é—á–∏—Ç—å—Å—è –æ—Ç –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –∫–∞–Ω–∞–ª–∞')
async def stop(ctx):
    voice_client = ctx.message.guild.voice_client
    song_queue.clear()
    if voice_client and voice_client.is_connected():
        await voice_client.disconnect()
        await ctx.send("```–ë–æ—Ç –æ—Ç–∫–ª—é—á–∏–ª—Å—è –æ—Ç –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –∫–∞–Ω–∞–ª–∞.üö∂```")
    else:
        await ctx.send("```–ë–æ—Ç –Ω–µ –±—ã–ª –ø–æ–¥–∫–ª—é—á–µ–Ω –∫ –≥–æ–ª–æ—Å–æ–≤–æ–º—É –∫–∞–Ω–∞–ª—É.```")

# –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–µ—Å–Ω–∏ –≤ –æ—á–µ—Ä–µ–¥—å –∏ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è –º—É–∑—ã–∫–∏
@bot.command(name='play', help='–í–æ—Å–ø—Ä–æ–∏–∑–≤–µ—Å—Ç–∏ –ø–µ—Å–Ω—é –∏–ª–∏ –¥–æ–±–∞–≤–∏—Ç—å –≤ –æ—á–µ—Ä–µ–¥—å')
async def play(ctx, url: str):
    if not ctx.message.author.voice:
        await ctx.send("```–í—ã –Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω—ã –∫ –≥–æ–ª–æ—Å–æ–≤–æ–º—É –∫–∞–Ω–∞–ª—É!```")
        return
    channel = ctx.message.author.voice.channel
    if ctx.voice_client is None:
        await channel.connect()
    voice_client = ctx.voice_client

    ydl_opts = {
        'format': 'bestaudio',
        'postprocessors': [{
            'key': 'FFmpegExtractAudio',
            'preferredcodec': 'mp3',
            'preferredquality': '192',
        }],
        'quiet': True,
        'no_warnings': True,
        'default_search': 'ytsearch',
    }

    try:
        if 'spotify.com/playlist' in url:
            results = sp.playlist(url)
            for item in results['tracks']['items']:
                track = item['track']
                track_name = track['name']
                artist_name = track['artists'][0]['name']
                search_query = f"{artist_name} {track_name}"
                song_info = {'url': f"ytsearch:{search_query}", 'title': f"{artist_name} - {track_name}"}
                song_queue.append(song_info)
            await ctx.send("```–ü–ª–µ–π–ª–∏—Å—Ç –¥–æ–±–∞–≤–ª–µ–Ω –≤ –æ—á–µ—Ä–µ–¥—å.üìú```")
        elif 'spotify.com/track' in url:
            results = sp.track(url)
            track_name = results['name']
            artist_name = results['artists'][0]['name']
            search_query = f"{artist_name} {track_name}"
            url = f"ytsearch:{search_query}"

            with youtube_dl.YoutubeDL(ydl_opts) as ydl:
                info = ydl.extract_info(url, download=False)
                if 'entries' in info:
                    info = info['entries'][0]
                title = info['title']

            song_info = {'url': url, 'title': title}
            if not voice_client.is_playing():
                await play_song(ctx, song_info['url'], song_info['title'])
            else:
                song_queue.append(song_info)
                await ctx.send(f"```–î–æ–±–∞–≤–ª–µ–Ω–æ –≤ –æ—á–µ—Ä–µ–¥—å: {title}```")
        else:
            with youtube_dl.YoutubeDL(ydl_opts) as ydl:
                info = ydl.extract_info(url, download=False)
                if 'entries' in info:
                    info = info['entries'][0]
                title = info['title']

            song_info = {'url': url, 'title': title}
            if not voice_client.is_playing():
                await play_song(ctx, song_info['url'], song_info['title'])
            else:
                song_queue.append(song_info)
                await ctx.send(f"```–î–æ–±–∞–≤–ª–µ–Ω–æ –≤ –æ—á–µ—Ä–µ–¥—å: {title}```")
    except youtube_dl.utils.DownloadError as e:
        await ctx.send(f"```–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∞—É–¥–∏–æ: {e}```")
    except KeyError as e:
        await ctx.send(f"```–ö–ª—é—á {e} –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –∞—É–¥–∏–æ.```")
        print(f"–ò—Å–∫–ª—é—á–µ–Ω–∏–µ: {e}")  # –õ–æ–≥ –∏—Å–∫–ª—é—á–µ–Ω–∏—è
    except Exception as e:
        await ctx.send(f"```–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {e}```")
        print(f"–ò—Å–∫–ª—é—á–µ–Ω–∏–µ: {e}")  # –õ–æ–≥ –∏—Å–∫–ª—é—á–µ–Ω–∏—è

# –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –æ—á–µ—Ä–µ–¥–∏
@bot.command(name='queue', help='–ü–æ–∫–∞–∑–∞—Ç—å —Ç–µ–∫—É—â—É—é –æ—á–µ—Ä–µ–¥—å –ø–µ—Å–µ–Ω')
async def queue(ctx):
    if len(song_queue) == 0:
        await ctx.send("```–û—á–µ—Ä–µ–¥—å –ø—É—Å—Ç–∞!```")
    else:
        queue_list = '\n'.join([song['title'] for song in song_queue])
        await ctx.send(f"```–¢–µ–∫—É—â–∞—è –æ—á–µ—Ä–µ–¥—å:\n{queue_list}```")

# –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø—Ä–æ–ø—É—Å–∫–∞ —Ç–µ–∫—É—â–µ–π –ø–µ—Å–Ω–∏
@bot.command(name='skip', help='–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å —Ç–µ–∫—É—â—É—é –ø–µ—Å–Ω—é ‚è≠Ô∏è')
async def skip(ctx):
    voice_client = ctx.message.guild.voice_client
    if voice_client.is_playing():
        voice_client.stop()
        await ctx.send("```–ü–µ—Å–Ω—è –±—ã–ª–∞ –ø—Ä–æ–ø—É—â–µ–Ω–∞.üí®```")
    else:
        await ctx.send("```–ù–∏–∫–∞–∫–∞—è –ø–µ—Å–Ω—è —Å–µ–π—á–∞—Å –Ω–µ –∏–≥—Ä–∞–µ—Ç.ü§∑```")

bot.run(DISCORD_TOKEN)
